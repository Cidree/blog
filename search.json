[
  {
    "objectID": "posts/003-Wildfires_ccaa_spain/index.html#introduction",
    "href": "posts/003-Wildfires_ccaa_spain/index.html#introduction",
    "title": "Spanish Wildfires by CCAA during 2006-2015",
    "section": "Introduction",
    "text": "Introduction\nIn this post, we will explore the distribution of the forest wildfires in Spain by Autonomous Community, creating some descriptive graphs using R and ggplot2.\nThe data was obtained from the MITECO (Ministerio para la Transición Ecológica y el Reto Demográfico), and it can be found in this link.\nI will use the data for the decade 2005-2015, which is the latest available database for this purpose."
  },
  {
    "objectID": "posts/003-Wildfires_ccaa_spain/index.html#loading-packages",
    "href": "posts/003-Wildfires_ccaa_spain/index.html#loading-packages",
    "title": "Spanish Wildfires by CCAA during 2006-2015",
    "section": "Loading packages",
    "text": "Loading packages\nFirst, we will load some packages:\n\nlibrary(pacman)\n\np_load(\n  ## Core\n  tidyverse, readxl, stringi,\n  \n  ## Vectorial data manipulation\n  sf,\n  \n  ## Download data\n  mapSpain,\n  \n  ## Visualization\n  RColorBrewer\n)\n\nHere, I will use the tidyverse as usual for data analysis and visualization, the package readxl since the data is in Excel format, and stringi for some string manipulation. Then, the package sf for vectorial data manipulation, mapSpain to download the map of Spain by any NUTS level. Finally, I will use RColorBrewer for colour palettes."
  },
  {
    "objectID": "posts/003-Wildfires_ccaa_spain/index.html#data-exploration",
    "href": "posts/003-Wildfires_ccaa_spain/index.html#data-exploration",
    "title": "Spanish Wildfires by CCAA during 2006-2015",
    "section": "Data exploration",
    "text": "Data exploration\nOnce the packages are loaded, we can load the data. Note that the data is on the \\(3^{rd}\\) sheet of the Excel file. The variables are in Spanish, so I will change some names to English so we can all understand what’s going on.\n\n## Load the data\nwildfires_tbl &lt;- read_excel(\"wildfires_2006_2015.xlsx\", sheet = 3) \n\n## Set new names\nwildfires_tbl &lt;- wildfires_tbl %&gt;% \n  select(municipality = NOMBRE, ccaa = COM_N_INE, small_fires = conatos, wildfires = incendios, \n         total_wildires = TOTAL_INCENDIOS, woodland_area = ARBOLADO, \n         treeless_area = NOARBOLADO, total_area = TOTAL)\n\n## Overview of the data\nglimpse(wildfires_tbl)\n\nRows: 4,376\nColumns: 8\n$ municipality   &lt;chr&gt; \"A Arnoia\", \"A Baña\", \"A Bola\", \"A Cañiza\", \"A Capela\",…\n$ ccaa           &lt;chr&gt; \"Galicia\", \"Galicia\", \"Galicia\", \"Galicia\", \"Galicia\", …\n$ small_fires    &lt;dbl&gt; 27, 66, 74, 330, 12, 149, 156, 75, 33, 426, 30, 58, 86,…\n$ wildfires      &lt;dbl&gt; 3, 37, 12, 81, 6, 24, 54, 47, 4, 273, 3, 62, 28, 16, 28…\n$ total_wildires &lt;dbl&gt; 30, 103, 86, 411, 18, 173, 210, 122, 37, 699, 33, 120, …\n$ woodland_area  &lt;dbl&gt; 30, 615, 16, 978, 394, 18, 262, 600, 8, 803, 30, 364, 6…\n$ treeless_area  &lt;dbl&gt; 8, 82, 61, 1260, 165, 104, 791, 641, 17, 3395, 6, 1558,…\n$ total_area     &lt;dbl&gt; 38, 697, 77, 2238, 559, 122, 1053, 1241, 25, 4198, 36, …\n\n\nSo we can see that there is data about the number of wildfires, and the area burned. This week we will study the number of wildfires and the next week we will have a look to the area burned and their relationship.\nThere are a total of 4,376 observations, where each observation stands for a single municipality (therefore, the column municipality can be thought as the ID). Then, we have the Autonomous Community (ccaa) to which the municipality belongs, the number of fires, and the burned area. To those who are not familiarized with the concept of “conato”, which I translated as small fire, this is:\n\nConato: wildfires where the total burned area is less than 1 hectare. This definition applies to the data here; however, in some Autonomous Communities the definition may be different. For instance, in Galicia they consider that less than 0.5 hectares must be woodland area, otherwise, it is categorized as normal wildfire.\n\nThere is also another category called Grandes Incendios Forestales (Large Forest Fires), which are those that burn more than 500 hectares. However, they did not consider this category in the data.\n\n\n\n\n\n\nNote\n\n\n\nIf you are interested, the first two sheets of the Excel file contain some metadata and information about the variables."
  },
  {
    "objectID": "posts/003-Wildfires_ccaa_spain/index.html#analysing-the-number-of-wildfires",
    "href": "posts/003-Wildfires_ccaa_spain/index.html#analysing-the-number-of-wildfires",
    "title": "Spanish Wildfires by CCAA during 2006-2015",
    "section": "Analysing the number of wildfires",
    "text": "Analysing the number of wildfires\nLet’s do some data wrangling! Since we will analyse the wildfires by Autonomous Community, we need to summarise our data using the ccaa variable. So this can be easily done as follows:\n\nwildfires_ccaa_tbl &lt;- wildfires_tbl %&gt;% \n  group_by(ccaa) %&gt;% \n  summarise(\n    total_wildfires = sum(total_wildires)\n  ) %&gt;% \n  ungroup()\n\nwildfires_ccaa_tbl\n\n# A tibble: 17 × 2\n   ccaa                       total_wildfires\n   &lt;chr&gt;                                &lt;dbl&gt;\n 1 Andalucia                             7519\n 2 Aragon                                3055\n 3 Canarias                               954\n 4 Cantabria                             6257\n 5 Castilla y Leon                      16421\n 6 Castilla-La Mancha                    6725\n 7 Cataluña                              3751\n 8 Comunidad Foral de Navarra            4577\n 9 Comunidad de Madrid                   2657\n10 Comunitat Valenciana                  3349\n11 Extremadura                           8148\n12 Galicia                              37870\n13 Illes Balears                         1031\n14 La Rioja                               634\n15 Pais Vasco                             913\n16 Principado de Asturias               16979\n17 Region de Murcia                      1157\n\n\nCool. This starts to look pretty good, but we need to apply some formatting. First, we can order the Autonomous Communities by descending order of the total wildfires, and create a label with the percentages format.\n\nwildfires_ccaa_total_tbl &lt;- wildfires_ccaa_tbl %&gt;% \n  mutate(\n    ccaa       = fct_reorder(ccaa, total_wildfires),\n    label_perc = scales::percent(total_wildfires / sum(total_wildfires),\n                                 accuracy = .01)\n    ) %&gt;% \n  arrange(desc(total_wildfires))\n\nwildfires_ccaa_total_tbl\n\n# A tibble: 17 × 3\n   ccaa                       total_wildfires label_perc\n   &lt;fct&gt;                                &lt;dbl&gt; &lt;chr&gt;     \n 1 Galicia                              37870 31.04%    \n 2 Principado de Asturias               16979 13.92%    \n 3 Castilla y Leon                      16421 13.46%    \n 4 Extremadura                           8148 6.68%     \n 5 Andalucia                             7519 6.16%     \n 6 Castilla-La Mancha                    6725 5.51%     \n 7 Cantabria                             6257 5.13%     \n 8 Comunidad Foral de Navarra            4577 3.75%     \n 9 Cataluña                              3751 3.07%     \n10 Comunitat Valenciana                  3349 2.75%     \n11 Aragon                                3055 2.50%     \n12 Comunidad de Madrid                   2657 2.18%     \n13 Region de Murcia                      1157 0.95%     \n14 Illes Balears                         1031 0.85%     \n15 Canarias                               954 0.78%     \n16 Pais Vasco                             913 0.75%     \n17 La Rioja                               634 0.52%     \n\n\nNow this looks much better! With the function scales::percent we can do the trick to create a character column with the percentage of wildfires over the total, and with the argument accuracy we specify the decimals. The fct_reorder function is used to order the levels of the Autonomous Communities (which is necessary for visualize in this order).\nNow that we have the data ready, we can create a cool visualization to explore the data better:\n\nwildfires_ccaa_total_tbl  %&gt;% \n  head(10) %&gt;% \n  ggplot(aes(x = ccaa, y = total_wildfires)) +\n  geom_col(fill = \"steelblue\") +\n  geom_label(aes(label = label_perc)) +\n  coord_flip() +\n  expand_limits(y = 40000) +\n  labs(x        = NULL,\n       y        = \"Total Wildfires\",\n       title    = \"Wildfires by Autonomous Community (2006-2015)\",\n       subtitle = \"Top 10 Autonomous Communities in Spain\",\n       caption  = \"Author: Adrián Cidre González\") +\n  annotate(\n    \"rect\", xmin = 7.5, xmax = 10.5, ymin = -500, ymax = 41000,\n    fill = NA, color = \"indianred4\", lwd = 1\n  ) +\n  annotate(\n    \"text\",\n    x = 8.5, y = 30000, \n    label = \"The northwest of Spain \\nsuffers the 58% of \\nthe wildfires\",\n    color = \"indianred4\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5))\n\n\n\n\nOk, that was quite a bit of code. First, we can see that I filtered the top 10 Autonomous Communities with head. Then, we have a bar plot with the label that we previously created. The expand_limits function expands the axis so the label of Galicia can be seen properly. Next, the annotate functions create the rectangle and the label on the text. Note that we need to specify the geom of the annotation (in these cases rect and text). The rest of the arguments are just formatting. Isn’t it cool? That’s why I love ggplot2 ❤️.\nAnalysing the results\nThere is an Autonomous Community were the number of fires are extremely high, Galicia. Almost one third of the Spanish burned area during the decade 2006-2015 was in this region, which in fact only occupies 5.8% of the territory of Spain. Next, we have Asturias with almost 14% of the total burned area, and occupying the 2.1% of the territory. To finish the top-3, we have Castilla and León where a similar area to Asturias was burned. However, Castilla and Leon is the biggest Autonomous Community of Spain representing the 18.6% of the territory. These numbers are alarming, and more when we look at the spatial location of these areas. The top-3 areas, representing the 58% of the burned area, are all located in the North-Western area of Spain."
  },
  {
    "objectID": "posts/003-Wildfires_ccaa_spain/index.html#analysing-the-spatial-distribution",
    "href": "posts/003-Wildfires_ccaa_spain/index.html#analysing-the-spatial-distribution",
    "title": "Spanish Wildfires by CCAA during 2006-2015",
    "section": "Analysing the spatial distribution",
    "text": "Analysing the spatial distribution\nTo analyse the spatial distribution we need to get the vectorial data of the Autonomous Communities of Spain. One way is to use the package mapSpain:\n\nesp_ccaa_sf &lt;- esp_get_ccaa() %&gt;% \n  filter(!(iso2.ccaa.name.es %in% c(\"Melilla\", \"Ceuta\")))\n\nWith that code I am eliminating Ceuta and Melilla, because they are not included in the wildfires dataset. The next step is to join the esp_ccaa_sf and wildfires_ccaa_total_tbl; however, there’s an issue:\n\nesp_ccaa_sf$nuts2.name\n\n [1] \"Andalucía\"                  \"Aragón\"                    \n [3] \"Principado de Asturias\"     \"Illes Balears\"             \n [5] \"Canarias\"                   \"Cantabria\"                 \n [7] \"Castilla y León\"            \"Castilla-La Mancha\"        \n [9] \"Cataluña\"                   \"Comunidad Valenciana\"      \n[11] \"Extremadura\"                \"Galicia\"                   \n[13] \"Comunidad de Madrid\"        \"Región de Murcia\"          \n[15] \"Comunidad Foral de Navarra\" \"País Vasco\"                \n[17] \"La Rioja\"                  \n\n\n\nwildfires_ccaa_total_tbl$ccaa\n\n [1] Galicia                    Principado de Asturias    \n [3] Castilla y Leon            Extremadura               \n [5] Andalucia                  Castilla-La Mancha        \n [7] Cantabria                  Comunidad Foral de Navarra\n [9] Cataluña                   Comunitat Valenciana      \n[11] Aragon                     Comunidad de Madrid       \n[13] Region de Murcia           Illes Balears             \n[15] Canarias                   Pais Vasco                \n[17] La Rioja                  \n17 Levels: La Rioja Pais Vasco Canarias Illes Balears ... Galicia\n\n\nDo you see it? The names are different, so that might be a problem when we try to join them. In the wildfires dataset, they didn’t use acute accent (e.g. á). We could manually change it, but the package stringi allows us to this more efficiently:\n\nesp_ccaa_sf %&gt;% \n  mutate(nuts2.name = nuts2.name %&gt;% stri_trans_general(\"Latin-ASCII\")) %&gt;% \n  pull(nuts2.name)\n\n [1] \"Andalucia\"                  \"Aragon\"                    \n [3] \"Principado de Asturias\"     \"Illes Balears\"             \n [5] \"Canarias\"                   \"Cantabria\"                 \n [7] \"Castilla y Leon\"            \"Castilla-La Mancha\"        \n [9] \"Cataluna\"                   \"Comunidad Valenciana\"      \n[11] \"Extremadura\"                \"Galicia\"                   \n[13] \"Comunidad de Madrid\"        \"Region de Murcia\"          \n[15] \"Comunidad Foral de Navarra\" \"Pais Vasco\"                \n[17] \"La Rioja\"                  \n\n\nThat’s a first approach, but now we need to manually change Calatuna to Cataluña, and also Comunidad Valenciana, which was previously already different. So all the changes will be achieved as follows:\n\n##\nwildfires_ccaa_sf &lt;- esp_ccaa_sf %&gt;% \n  mutate(nuts2.name = nuts2.name %&gt;% stri_trans_general(\"Latin-ASCII\")) %&gt;% \n  mutate(nuts2.name = case_when(\n    nuts2.name == \"Comunidad Valenciana\" ~ \"Comunitat Valenciana\",\n    nuts2.name == \"Cataluna\" ~ \"Cataluña\",\n    .default = nuts2.name\n  )) %&gt;% \n  inner_join(\n    wildfires_ccaa_total_tbl,\n    by = join_by(nuts2.name == ccaa)\n  ) %&gt;% \n  select(nuts2.name, total_wildfires)\n\nwildfires_ccaa_sf\n\nSimple feature collection with 17 features and 2 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -13.21924 ymin: 34.70209 xmax: 4.320511 ymax: 43.78793\nGeodetic CRS:  ETRS89\nFirst 10 features:\n               nuts2.name total_wildfires                       geometry\n1               Andalucia            7519 MULTIPOLYGON (((-4.268895 3...\n2                  Aragon            3055 POLYGON ((-0.724501 42.9201...\n3  Principado de Asturias           16979 MULTIPOLYGON (((-4.512301 4...\n4           Illes Balears            1031 MULTIPOLYGON (((3.176714 39...\n5                Canarias             954 MULTIPOLYGON (((-11.18653 3...\n6               Cantabria            6257 MULTIPOLYGON (((-3.153338 4...\n7         Castilla y Leon           16421 MULTIPOLYGON (((-4.737023 4...\n8      Castilla-La Mancha            6725 MULTIPOLYGON (((-2.05169 41...\n9                Cataluña            3751 MULTIPOLYGON (((0.858215 42...\n10   Comunitat Valenciana            3349 MULTIPOLYGON (((0.17079 40....\n\n\nThere, the inner_join function uses now the both columns to create a new table which the data together.\nUp to this point, we can improve the visualization by creating some breaks:\n\nwildfires_ccaa_sf &lt;- wildfires_ccaa_sf %&gt;% \n  mutate(\n    total_wildfires = cut(\n      wildfires_ccaa_sf$total_wildfires, \n      breaks  = c(0, 1000, 3000, 5000, 10000, 20000, 40000),\n      dig.lab = 5\n    )\n  )\n\nBy doing this, we split the continuous variable of number of wildfires in a discrete variable divided into bins. That can improve some visualizations when the values are very different, and specially to catch outliers.\n\nggplot(wildfires_ccaa_sf) +\n  geom_sf(aes(fill = total_wildfires)) +\n  scale_fill_brewer(palette = \"RdYlGn\", direction = -1) +\n  labs(\n    title    = \"Number of Wildfires by CCAA\",\n    subtitle = \"Period: 2006-2015\",\n    fill     = \"Wildfires\"\n  ) +\n  theme_bw() +\n  theme(plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5),\n        legend.position = \"bottom\")\n\n\n\n\nAnalysing the results\nWe can now confirm that the North-Western area of Spain suffers a significantly higher number of wildfires (&gt;10.000) in comparison to other areas. In contrast, the Eastern area suffers a lesser number of fires, with the Vask Country and La Rioja as the Autonomous Communities which suffered the smallest number of wildfires during the period 2006-2015."
  },
  {
    "objectID": "posts/001-Thematic_map/index.html",
    "href": "posts/001-Thematic_map/index.html",
    "title": "Choropleth map",
    "section": "",
    "text": "In this exercise, we will create two choropleth maps using ggplot2:"
  },
  {
    "objectID": "posts/001-Thematic_map/index.html#watch-the-video",
    "href": "posts/001-Thematic_map/index.html#watch-the-video",
    "title": "Choropleth map",
    "section": "Watch the video",
    "text": "Watch the video"
  },
  {
    "objectID": "posts/001-Thematic_map/index.html#load-packages",
    "href": "posts/001-Thematic_map/index.html#load-packages",
    "title": "Choropleth map",
    "section": "Load packages",
    "text": "Load packages\nWe will use the following packages:\n\n# install.packages(\"pacman\")\nlibrary(pacman)\n\np_load(\n  ## Core\n  tidyverse,\n  \n  ## Spatial data manipulation\n  sf,\n  \n  ## Download data\n  mapSpain, rnaturalearth,\n  \n  ## Visualization\n  RColorBrewer, ggspatial\n)\n\n# High resolution world map\nremotes::install_github(\"ropensci/rnaturalearthhires\")\n\nFirst, I use pacman to load all the packages. Then, I use the tidyverse as the core package for data manipulation and visualization. The package sf will be used to treat the vectorial data. The package mapSpain provide functions to download the administrative boundaries of Spain (click here for further information). The rnaturalearth is a package that will provide us with the world map. However, for using the high resolution map we need also to install rnturalearthhires from GitHub. Finally, I will use the RColorBrewer package for colour palettes, and the ggspatial to add the map scale and north arrow. So, let’s dive into the exercise!"
  },
  {
    "objectID": "posts/001-Thematic_map/index.html#prepare-the-data",
    "href": "posts/001-Thematic_map/index.html#prepare-the-data",
    "title": "Choropleth map",
    "section": "Prepare the data",
    "text": "Prepare the data\nThe first step, is to download the world countries map using the ne_countries() function. This will return the map we see in Figure 1.\n\n# World countries\nworld_sf &lt;- ne_countries(\n  scale       = 10,\n  returnclass = \"sf\"\n)\nplot(world_sf[\"region_un\"], main = \"World Map\")\n\n\n\nFigure 1: World map\n\n\n\nNext, we can get the Spanish population by municipality in 2019 using the mapSpain package:\n\n# Get Spanish population by municipality in 2019\nspain_pop_tbl &lt;- mapSpain::pobmun19\n\nhead(spain_pop_tbl)\n\n  cpro provincia cmun      name  pob19   men women\n1   02  Albacete  001 Abengibre    790   379   411\n2   02  Albacete  002    Alatoz    519   291   228\n3   02  Albacete  003  Albacete 173329 84687 88642\n4   02  Albacete  004  Albatana    692   356   336\n5   02  Albacete  005   Alborea    658   337   321\n6   02  Albacete  006  Alcadozo    654   363   291\n\n\nThis is a data frame with the data we want to plot. However, we need to assign this data to a spatial object with the municipalities. We can get the sf object using the function esp_get_munic:\n\n# Get Spain boundaries by municipality\nspain_sf &lt;- esp_get_munic()\n\nhead(spain_sf)\n\nSimple feature collection with 6 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -3.14019 ymin: 36.73845 xmax: -2.05701 ymax: 37.54576\nGeodetic CRS:  ETRS89\n    codauto ine.ccaa.name cpro ine.prov.name cmun      name LAU_CODE\n382      01     Andalucía   04       Almería  001      Abla    04001\n379      01     Andalucía   04       Almería  002  Abrucena    04002\n374      01     Andalucía   04       Almería  003      Adra    04003\n375      01     Andalucía   04       Almería  004 Albánchez    04004\n358      01     Andalucía   04       Almería  005 Alboloduy    04005\n373      01     Andalucía   04       Almería  006     Albox    04006\n                          geometry\n382 POLYGON ((-2.77744 37.23836...\n379 POLYGON ((-2.88984 37.09213...\n374 POLYGON ((-2.93161 36.75079...\n375 POLYGON ((-2.13138 37.29959...\n358 POLYGON ((-2.70077 37.09674...\n373 POLYGON ((-2.15335 37.54576...\n\n\nWe see that the data frame spain_pop_tbl and the sf spain_sf share 3 variables:\n\ncpro: province code\ncmun: municipality code\nname: name of the municipality\n\nThe next step is to join both tables together, so we have the data frame attributes in our spatial object. We can achieve this as follows:\n\n# Join population to sf object\nspain_pop_sf &lt;- right_join(\n  spain_sf,\n  spain_pop_tbl,\n  by = join_by(cpro, cmun)\n)\n\nNote that here I did not include the variable name for joining the dataset. There are two reasons:\n\nThe name and cmun variables express exactly the same.\nThe variable name have some misspellings between datasets creating some NA values.\n\nOnce this is clarified, we can begin with the maps."
  },
  {
    "objectID": "posts/001-Thematic_map/index.html#spanish-population",
    "href": "posts/001-Thematic_map/index.html#spanish-population",
    "title": "Choropleth map",
    "section": "Spanish population",
    "text": "Spanish population\nWe could plot the Spanish population as a continuous variable, however, this would not be the best approach since the distribution of the population is quite irregular, and there is a small number of cities with very high population. Therefore, we can create bins based on the quantiles:\n\n# Define the breaks (bin edges) based on percentiles\nbreaks &lt;- quantile(\n  spain_pop_sf$pob19, \n  probs = seq(0, 1, by = 0.1)\n)\n\n# Round to hundred, and keep unique values\nbreaks &lt;- round(breaks, -2) %&gt;% unique()\nbreaks[length(breaks)] &lt;- breaks[length(breaks)] + 100\n\n# Create bins\nspain_pop_ready_sf &lt;- spain_pop_sf %&gt;% \n  mutate(\n    pop_bin = cut(pob19, breaks = breaks, dig.lab = 10)\n  )\n\nprint(levels(spain_pop_ready_sf$pop_bin))\n\n[1] \"(0,100]\"        \"(100,200]\"      \"(200,300]\"      \"(300,500]\"     \n[5] \"(500,900]\"      \"(900,1700]\"     \"(1700,3500]\"    \"(3500,9200]\"   \n[9] \"(9200,3266200]\"\n\n\nWith the previous code we create the new variable called pop_bin which consists in a total of 9 bins representing similar amount of municipalities. Finally, we can represent it graphically with the next code:\n\n# Plot the population\nggplot(spain_pop_ready_sf) + \n  ## Geometries\n  geom_sf(data = world_sf, fill = \"grey90\", color = \"black\") +\n  geom_sf(aes(fill = pop_bin), color = NA) +\n  ## Scales\n  scale_fill_brewer(palette = \"RdBu\", na.translate = FALSE, direction = -1) +\n  ## Labels\n  labs(\n    title   = \"Spanish Population by Municipality\",\n    fill    = \"Population\",\n    caption = \"Author: Adrián Cidre González\"\n  ) +\n  ## Coordinates\n  coord_sf(xlim = st_bbox(spain_pop_ready_sf)[c(1,3)],\n           ylim = st_bbox(spain_pop_ready_sf)[c(2,4)]) +\n  ## Theme\n  theme_bw() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),\n    legend.background = element_rect(color = \"black\")\n  ) +\n  ## Ggspatial\n  annotation_scale(location = \"br\") +\n  annotation_north_arrow(location = \"tr\", which_north = \"true\")\n\n\n\nFigure 2: Population in Spain by Municipality (2019)\n\n\n\nWe see some patterns in the distribution of the Spanish population. The central-north area exhibits a clear lower population than others areas., whereas coastal areas and islands area highly populated."
  },
  {
    "objectID": "posts/001-Thematic_map/index.html#ratio-menwomen",
    "href": "posts/001-Thematic_map/index.html#ratio-menwomen",
    "title": "Choropleth map",
    "section": "Ratio Men/Women",
    "text": "Ratio Men/Women\nI will now create a similar visualization, but displaying the ratio between men and women by municipality. First, I create the new column:\n\n# Ratio men-women\nspain_pop_ready_sf &lt;- spain_pop_sf %&gt;% \n  mutate(ratio_mw = men/women)\n\nsummary(spain_pop_ready_sf$ratio_mw)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.3415  1.0003  1.0690     Inf  1.2067     Inf \n\n\nWe can see in the summary before that the values between the minimum and the \\(3^{rd}\\) quantile exhibit normal values, but the maximum value is infinite. This is because in some municipality there are men, but not woman (i.e. division by zero). We can see also the boxplot:\n\nboxplot(spain_pop_ready_sf$ratio_mw)\n\n\n\nFigure 3: Distribution of Men/Women ratio by municipallity\n\n\n\nThis tells us that a visualization of the continuous distribution will barely differentiate between area with higher women proportion (&lt;1), and areas with higher men proportion (&gt;1). Therefore, I apply the same approach creating bins:\n\n# Define the breaks (bin edges) based on percentiles\nbreaks &lt;- quantile(\n  spain_pop_ready_sf$ratio_mw, \n  probs = seq(0, 1, by = 0.1)\n)\n\n# Round to hundred, and keep unique values\nbreaks &lt;- round(breaks, 2) %&gt;% unique()\n\n# Create bins\nspain_pop_ready_sf &lt;- spain_pop_ready_sf %&gt;% \n  mutate(\n    ratio_bin = cut(ratio_mw, breaks = breaks)\n  )\n\n## Print bins\nprint(levels(spain_pop_ready_sf$ratio_bin))\n\n [1] \"(0.34,0.96]\" \"(0.96,0.99]\" \"(0.99,1.01]\" \"(1.01,1.04]\" \"(1.04,1.07]\"\n [6] \"(1.07,1.11]\" \"(1.11,1.17]\" \"(1.17,1.26]\" \"(1.26,1.44]\" \"(1.44,Inf]\" \n\n\nWith this code, a total of 10 bins are generated with the ranges showed above. So let’s proceed to the visualization:\n\n# Plot the population\nggplot(spain_pop_ready_sf) + \n  ## Geometries\n  geom_sf(data = world_sf, fill = \"grey90\", color = \"black\") +\n  geom_sf(aes(fill = ratio_bin), color = NA) +\n  ## Scales\n  scale_fill_brewer(palette = \"RdBu\", na.translate = FALSE, direction = -1) +\n  ## Labels\n  labs(\n    title   = \"Men/Women ratio\",\n    fill    = \"Ratio\",\n    caption = \"Author: Adrián Cidre González\"\n  ) +\n  ## Coordinates\n  coord_sf(xlim = st_bbox(spain_pop_ready_sf)[c(1,3)],\n           ylim = st_bbox(spain_pop_ready_sf)[c(2,4)]) +\n  ## Theme\n  theme_bw() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),\n    legend.background = element_rect(color = \"black\")\n  ) +\n  ## Ggspatial\n  annotation_scale(location = \"br\") +\n  annotation_north_arrow(location = \"tr\", which_north = \"true\")\n\n\n\nFigure 4: Sex ratio in Spain by Municipality in 2019 (ratio men/women)\n\n\n\nCuriously, we can see that the less populated areas are also populated mostly by men, whereas coastal areas and islands tend to be more balanced, or more populated by women."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "\n\nR-FOREST\n\n\nR-FOREST\n\n\nBridging forests and technology\n\n\nBridging forests and technology\n\n",
    "section": "",
    "text": "R-FOREST\n\n\nR-FOREST\n\n\nBridging forests and technology\n\n\nBridging forests and technology\n\n\nDiscover my courses\nDiscover my courses\n\n\n\nIntroduction\nIn this blog I will share contents of my life, my work, and also I will create teaching content. Here, I share my experiences and knowledge in diverse subjects, focusing on:\n\n\nR programming\nStatistics\nForest pathology\nWildfires\nForest modelling\nRemote Sensing\nSpatial Data Science\nTeaching"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "I am Forestry Engineer, and currently I am working as researcher at the University of Córdoba in the LIFE FAGESOS Project, and more specifically, I am developing biophysical models for Phytophthora cinnamomi in the Mediterranean Basin. Furthermore, I am finishing my Master’s Degree in Geomatics, Remote Sensing and Spatial Models applied to Forest Management at the same University.\nFor over two years, I have been using the programming language R in a daily basis. I try to inspire others to use it, since I believe its potential is unknown by most. I mostly work doing data and spatial data analysis, statistics, modelling, remote sensing, and development of web applications. All of this applied to my field of knowledge which is forestry. Over the time, I honed my skills with R, web development languages (HTML & CSS), deployment tools (Shiny, EC2, Git, Docker), and I try to learn something new every day."
  },
  {
    "objectID": "about.html#curriculum-vitae",
    "href": "about.html#curriculum-vitae",
    "title": "About",
    "section": "Curriculum Vitae",
    "text": "Curriculum Vitae"
  },
  {
    "objectID": "02_courses/00_quarto_es.html",
    "href": "02_courses/00_quarto_es.html",
    "title": "Quarto - diseño de documentos profesionales en RStudio",
    "section": "",
    "text": "13 €\n\n\n\nOnline\n\n\n\n10 horas\n\n\n\nSiempre Disponible"
  },
  {
    "objectID": "02_courses/00_quarto_es.html#descripción",
    "href": "02_courses/00_quarto_es.html#descripción",
    "title": "Quarto - diseño de documentos profesionales en RStudio",
    "section": "Descripción",
    "text": "Descripción"
  },
  {
    "objectID": "02_courses/00_quarto_es.html#requisitos-previos",
    "href": "02_courses/00_quarto_es.html#requisitos-previos",
    "title": "Quarto - diseño de documentos profesionales en RStudio",
    "section": "Requisitos previos",
    "text": "Requisitos previos"
  },
  {
    "objectID": "02_courses/00_quarto_es.html#contenidos-del-curso",
    "href": "02_courses/00_quarto_es.html#contenidos-del-curso",
    "title": "Quarto - diseño de documentos profesionales en RStudio",
    "section": "Contenidos del Curso",
    "text": "Contenidos del Curso"
  },
  {
    "objectID": "02_courses/00_quarto_es.html#resultados-del-curso",
    "href": "02_courses/00_quarto_es.html#resultados-del-curso",
    "title": "Quarto - diseño de documentos profesionales en RStudio",
    "section": "Resultados del Curso",
    "text": "Resultados del Curso"
  },
  {
    "objectID": "02_courses/01_data_analysis_es.html",
    "href": "02_courses/01_data_analysis_es.html",
    "title": "Introducción a Análisis y Visualización de Datos en R [2023]",
    "section": "",
    "text": "13 €\n\n\n\nOnline\n\n\n\n20 horas\n\n\n\nSiempre Disponible"
  },
  {
    "objectID": "02_courses/01_data_analysis_es.html#descripción",
    "href": "02_courses/01_data_analysis_es.html#descripción",
    "title": "Introducción a Análisis y Visualización de Datos en R [2023]",
    "section": "Descripción",
    "text": "Descripción"
  },
  {
    "objectID": "02_courses/01_data_analysis_es.html#requisitos-previos",
    "href": "02_courses/01_data_analysis_es.html#requisitos-previos",
    "title": "Introducción a Análisis y Visualización de Datos en R [2023]",
    "section": "Requisitos previos",
    "text": "Requisitos previos"
  },
  {
    "objectID": "02_courses/01_data_analysis_es.html#contenidos-del-curso",
    "href": "02_courses/01_data_analysis_es.html#contenidos-del-curso",
    "title": "Introducción a Análisis y Visualización de Datos en R [2023]",
    "section": "Contenidos del Curso",
    "text": "Contenidos del Curso"
  },
  {
    "objectID": "02_courses/01_data_analysis_es.html#resultados-del-curso",
    "href": "02_courses/01_data_analysis_es.html#resultados-del-curso",
    "title": "Introducción a Análisis y Visualización de Datos en R [2023]",
    "section": "Resultados del Curso",
    "text": "Resultados del Curso"
  },
  {
    "objectID": "courses.html",
    "href": "courses.html",
    "title": "Courses",
    "section": "",
    "text": "Courses\n\nLearn data analysis and data science with me. In the future, I plan to offer more exciting courses\n\n\n\n\n\nCourses\nLearn data analysis and data science with me. In the future, I plan to offer more exciting courses\n\n\n\n\n\n\n\n\n\nIntroducción a Análisis de Datos Espaciales en R\nOnline\n\n\n\nUpcoming...\n\n\n\n\n\n\n\nSpanish\n\n\nLearn more\n\n\n\n\n\n\n\n\n\n\nIntroduction to Spatial Data Analysis with R\nOnline\n\n\n\nUpcoming...\n\n\n\n\n\n\n\nEnglish\n\n\nLearn more\n\n\n\n\n\n\n\n\n\n\nINTRODUCCIÓN A ANÁLISIS Y VISUALIZACIÓN DE DATOS EN R [2023]\nOnline\n\n\n\nAvailable Anytime\n\n\n\n20 hours\n\n\n\nSpanish\n\n\nLearn more\n\n\n\n\n\n\n\n\n\n\nQuarto - diseño de documentos profesionales en RStudio\nOnline\n\n\n\nAvailable Anytime\n\n\n\n10 hours\n\n\n\nSpanish\n\n\nLearn more"
  },
  {
    "objectID": "posts/000-Presentation/index.html",
    "href": "posts/000-Presentation/index.html",
    "title": "Presentation",
    "section": "",
    "text": "Introducing myself\n\nMy name is Adrián Cidre González, and I hold a degree in Forestry Engineering from the University of Santiago de Compostela. Currently, I am pursuing my master’s degree in Geomatics, Remote Sensing, and Spatial Models applied to Forest Management at the University of Córdoba (Spain).\nNot only am I a dedicated student, but I am also actively involved in practical research. I am currently working as a research assistant in the LIFE-FAGESOS project at the University of Córdoba. This project allows me to contribute to cutting-edge work related to forest management, protection and sustainability.\nWithin the scope of my research, I specialize in data analysis, specifically as a data analyst. One of my primary responsibilities involves creating models of pests in Europe for the LIFE-PROJECT that I am currently engaged in. Using my skills in the R environment, I perform spatial data analysis and modeling, as well as remote sensing analysis.\nIn addition to my academic pursuits and research, I am excited to use this blog as a platform to share my work, courses, and other fascinating topics that will engage and inform the public. By providing valuable insights into my field and showcasing the projects I am involved in, I aim to spark interest and foster a greater understanding of the importance of forestry, geomatics, and data analysis in sustainable forest management."
  },
  {
    "objectID": "posts/002-rpostgis_back/index.html#history",
    "href": "posts/002-rpostgis_back/index.html#history",
    "title": "rpostgis is back",
    "section": "History",
    "text": "History\nThe rpostgis package was born around 2016, and since then, more than 20 versions have been released to CRAN (the official R repository). However, the geospatial ecosystem in R has gone through important changes during the last years (check this issue), including the retirement of the packages rgeos, rgdal, and maptools. These packages as well and sp and raster are being replaced by the packages sf (for vectorial operation), terra (for both raster and vectorial data), and stars (datacubes).\nThese changes in the geospatial ecosystem affected many other packages depending on the retired packages, including rpostgis. The authors of the package noted that they lacked time to continue the maintenance of the package, and that’s where I offered myself to maintain the package. During the last weeks I have been working on the migration of the package to the new geospatial ecosystem, and on October \\(15^{th}\\) the package was published in CRAN."
  },
  {
    "objectID": "posts/002-rpostgis_back/index.html#package-updates",
    "href": "posts/002-rpostgis_back/index.html#package-updates",
    "title": "rpostgis is back",
    "section": "Package updates",
    "text": "Package updates\nThe package updates haven’t been published in the website of the package (rpostgis). This is because we am working in the migration of the package to my GitHub repository, and then I will publish the website again probably through GitHub pages or my website. However, the main new features are:\n\nFunctions pg* migrated to packages sf/terra. Therefore, the inputs/outputs of these functions will be sf objects, SpatVector and SpatRaster objects by default. However, to maintain compatibility with recent versions, a new argument returnclass have been added to the pg* family of functions.\npgGetRast and pgWriteRast include now a progress bar to inform the user about the estimated remaining time. These progress bars can be disabled through the new function argument progress = FALSE.\nThe extension postgis_raster can be installed using the function pgPostGIS() using the new argument raster = TRUE.\nThe function pgInsert has been deprecated in favour of the function pgWriteGeom to keep naming consistency with other functions of the package."
  },
  {
    "objectID": "posts/002-rpostgis_back/index.html#package-notes",
    "href": "posts/002-rpostgis_back/index.html#package-notes",
    "title": "rpostgis is back",
    "section": "Package notes",
    "text": "Package notes\nAs many changes have been committed, it is possible that some unexpected errors may arise. I am working to detect these unexpected errors and commit them to the development version. That is why right now I recommend to install the GitHub version of the package, which might be ahead of the CRAN version using:\n\nremotes::install_github(\"mablab/rpostgis\")\n\nYou can also install the development version, which might be unstable:\n\nremotes::install_github(\"mablab/rpostgis\", ref = \"dev\")\n\n\n\n\n\n\n\nCaution\n\n\n\nNote that you need to have installed the package remotes"
  },
  {
    "objectID": "posts/002-rpostgis_back/index.html#writeread-vectorial-data",
    "href": "posts/002-rpostgis_back/index.html#writeread-vectorial-data",
    "title": "rpostgis is back",
    "section": "Write/Read vectorial data",
    "text": "Write/Read vectorial data\nThe package is used as an interface between R and PostgreSQL with a PostGIS extension. Actually, the PostGIS extension can be installed using the function rpostgis::pgPostGIS(). First of all, we need to connect to our PostgreSQL server using the RPostgres or the RPostgreSQL drivers. A basic connection with a local database could be achieved as follows:\n\nconn &lt;- RPostgres::dbConnect(\n  drv      = RPostgres::Postgres(),\n  host     = \"localhost\",\n  dbname   = \"my_database\",\n  port     = 5432,\n  user     = \"adrian_cidre\",\n  password = \"awesomepassword\"\n)\n\nWe can then check if the connection was successful, and install the necessary extensions (remember also to load the package). If we just set the into the function, it will install PostGIS automatically but not other extensions:\n\nlibrary(rpostgis)\npgPostGIS(conn)\n\n[1] TRUE\n\n\nFirst, let’s create fictional data:\n\n# Load necessary packages\nlibrary(sf)\nlibrary(tidyverse)\n\n# Create fictional tibble\npts_tbl &lt;- tibble(\n  x = seq(-8.3, -7.3, length.out = 50),\n  y = seq(42.4, 43, length.out = 50),\n  z = rnorm(50)\n)\n\n# Convert to sf\npts_sf &lt;- st_as_sf(pts_tbl, coords = c(\"x\", \"y\"), crs = 4326)\n\nSo basically, I created a sf object with POINT geometry. Now let’s imagine this is awesome data we want to save in our PostGIS database. We can use the function pgWriteGeom(conn, name, data.obj). These are the three arguments that you always must specify:\n\npgWriteGeom(\n  conn     = conn,\n  name     = c(\"public\", \"awesome_points\"),\n  data.obj = pts_sf\n)\n\n[1] TRUE\n\n\nWe are exporting to our connection the data object pts_sf, to the public schema, and setting its name to awesome_points. The function returns TRUE when the transfer was successful. If we don’t trust it, we can use the next function to list all the vectorial data in our database:\n\npgListGeom(conn)\n\n  schema_name     table_name geom_column geometry_type     type\n1      public awesome_points        geom         POINT GEOMETRY\n\n\nExcellent! Now let’s imagine that after some time we want to get back to this file. How can we get it back into R? So, that’s pretty easy! We can use the pgGetGeom(conn, name) as easy as this:\n\n# Get the points\nawesome_pts_sf &lt;- pgGetGeom(\n  conn = conn,\n  name = \"awesome_points\"\n)\n\n# Check it\nhead(awesome_pts_sf)\n\nSimple feature collection with 6 features and 1 field\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -8.3 ymin: 42.4 xmax: -8.197959 ymax: 42.46122\nGeodetic CRS:  +proj=longlat +datum=WGS84 +no_defs \n           z                       geom\n1  0.1817181          POINT (-8.3 42.4)\n2  0.1760245 POINT (-8.279592 42.41224)\n3 -0.4406823 POINT (-8.259184 42.42449)\n4 -1.8539099 POINT (-8.238776 42.43673)\n5  1.8827414 POINT (-8.218367 42.44898)\n6  0.1964005 POINT (-8.197959 42.46122)\n\n\nWe have our object back into R! You may have noticed that I used name = \"awesome_points\" instead of name = c(\"public\", \"awesome_points\"). This is because when we do not specify the schema, by default, the function will use the public schema both for reading and writing."
  },
  {
    "objectID": "posts/002-rpostgis_back/index.html#conclusion",
    "href": "posts/002-rpostgis_back/index.html#conclusion",
    "title": "rpostgis is back",
    "section": "Conclusion",
    "text": "Conclusion\nSo you have seen the basic and most typical use of the rpostgis package for vectorial data. In future posts, I will share an example reading/writting raster data.\nIf you liked the package and this tutorial, please feel free to share it with your colleagues.\n\n\n\n\n\n\nWarning\n\n\n\nOh my God! And do not forget to close your connection!!!\n\ndbDisconnect(conn)"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Posts",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nSpanish Wildfires by CCAA during 2006-2015\n\n\n9 min\n\n\n\nR\n\n\nforestry\n\n\nwildfires\n\n\nggplot2\n\n\n\n\n\n\n\nNov 18, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nrpostgis is back\n\n\n5 min\n\n\n\nR\n\n\nspatial\n\n\npackages\n\n\ndatabases\n\n\n\n\n\n\n\nOct 20, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChoropleth map\n\n\n6 min\n\n\n\nR\n\n\nspatial\n\n\nggplot2\n\n\n\n\n\n\n\nSep 30, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPresentation\n\n\n2 min\n\n\n\npersonal\n\n\n\n\n\n\n\nMay 29, 2023\n\n\n\n\n\n\n\n\nNo matching items"
  }
]